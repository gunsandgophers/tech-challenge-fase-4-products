{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "description": "get index payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "index"
                ],
                "summary": "Show the index payload",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/checkout": {
            "post": {
                "description": "make a checkout for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Make an order checkout",
                "parameters": [
                    {
                        "description": "Checkout",
                        "name": "checkout",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CheckoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.CheckoutDTO"
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/display": {
            "get": {
                "description": "Get order list for a display",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.OrderDisplayDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/payment": {
            "post": {
                "description": "process the payment for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Process order payment",
                "parameters": [
                    {
                        "description": "Payment",
                        "name": "payment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.PaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/payment-status": {
            "get": {
                "description": "get payment status by order_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get a payment status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Get Payment Status",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.PaymentStatusDTO"
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "when invalid params or invalid object",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{order_id}/preparation-status": {
            "put": {
                "description": "Update the preparation status for an order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update order preparation status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Identification",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Order Request Params",
                        "name": "preparation_status_update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.PreparationStatusUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/": {
            "post": {
                "description": "register the product information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a product",
                "parameters": [
                    {
                        "description": "Insert Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ProductDTO"
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "when create product process error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/{category}/": {
            "get": {
                "description": "List a set of products information over followed categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product category",
                        "name": "category",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page defaults to 1",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Size defaults to 50",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.ProductDTO"
                            }
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "when list products process error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/{id}/": {
            "put": {
                "description": "change the product information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product identifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product object",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.ProductDTO"
                        }
                    },
                    "400": {
                        "description": "when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "when update product process error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove the product information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product identifier",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "when when bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "when delete product process error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CheckoutRequest": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "products_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "controllers.PaymentRequest": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                }
            }
        },
        "controllers.PreparationStatusUpdateRequest": {
            "type": "object",
            "properties": {
                "preparation_status": {
                    "type": "string"
                }
            }
        },
        "controllers.ProductRequest": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "dtos.CheckoutDTO": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "method": {
                    "$ref": "#/definitions/dtos.MethodType"
                },
                "orderId": {
                    "type": "string"
                },
                "paymentLink": {
                    "type": "string"
                }
            }
        },
        "dtos.MethodType": {
            "type": "string",
            "enum": [
                "PIX",
                "CREDIT_CARD"
            ],
            "x-enum-varnames": [
                "PIX",
                "CREDIT_CARD"
            ]
        },
        "dtos.OrderDisplayDTO": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.OrderItemDisplayDTO"
                    }
                },
                "order_id": {
                    "type": "string"
                },
                "preparation_status": {
                    "type": "string"
                }
            }
        },
        "dtos.OrderItemDisplayDTO": {
            "type": "object",
            "properties": {
                "product_name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "dtos.PaymentStatusDTO": {
            "type": "object",
            "properties": {
                "order_id": {
                    "type": "string"
                },
                "payment_status": {
                    "type": "string"
                }
            }
        },
        "dtos.ProductDTO": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}